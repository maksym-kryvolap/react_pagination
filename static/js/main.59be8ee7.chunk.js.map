{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","pages","currentPage","onPageChange","nextPage","prevPage","valuePages","from","to","numbers","n","push","getNumbers","length","className","classNames","disabled","href","onClick","map","page","active","event","currentTarget","textContent","hadlerChangePage","App","useState","total","perPage","setPerPage","setCurrentPage","totalPages","currentPages","i","pagesArray","firstItem","lastItem","id","value","onChange","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"sNAYaA,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEMC,ECnBD,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDYYG,CAAW,EAAGX,EAAMY,QAQvC,OACE,qBACEC,UAAU,aADZ,UAGE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBd,IAHhB,SAME,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAI,WAAMf,GACV,gBAA+B,IAAhBA,EACfgB,QAASb,EALX,oBAWDC,EAAWa,KAAI,SAAAC,GAAI,OAClB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASlB,IAHvB,SAOE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,SAACI,GAAD,OAvCM,SAACA,GACpBA,EAAMC,cAAcC,aACtBrB,GAAcmB,EAAMC,cAAcC,aAqCRC,CAAiBH,IAJvC,SAMGF,KAREA,MAaT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUd,IAAgBD,EAAMY,SAHtC,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMf,GACV,gBAAeA,IAAgBD,EAAMY,OACrCK,QAASd,EALX,wBErEKsB,EAAgB,WAC3B,MAAgBC,mBAAS,IAAlBC,EAAP,oBACA,EAA8BD,mBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAsCH,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB6B,EAApB,KAuBM9B,EArBa,SAAC+B,EAAoBC,GAItC,IAHA,IAAMhC,EAAQ,GACVmB,EAAO,GAEFc,EAAI,EAAGA,GAAKF,EAAYE,GAAK,EAChCA,EAAID,IAAiB,GAAKC,EAAI,EAChCd,EAAKT,KAAKuB,IAEVd,EAAKT,KAAKuB,GACVjC,EAAMU,KAAKS,GACXA,EAAO,IAQX,OAJIA,EAAKP,QACPZ,EAAMU,KAAKS,GAGNnB,EAGKkC,CAAWP,EAAOC,GAc1BO,EAAYnC,EAAMC,EAAc,GAAG,GACnCmC,EAAWpC,EAAMC,EAAc,GAAGD,EAAMC,EAAc,GAAGW,OAAS,GAExE,OACE,sBAAKC,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,mBACiCkC,EADjC,cACgDC,EADhD,eAC+DT,EAD/D,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOV,EACPW,SAAW,SAAAlB,GACTQ,GAAYR,EAAMmB,OAAOF,OACzBR,EAAe,IAPnB,UAUE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOA,EACPC,YAAaA,EACbC,aAlDe,SAACoC,GACpBR,EAAeQ,IAkDXnC,SA/CW,WACf2B,GAAe,SAAAQ,GAAK,OAAIA,EAAQ,MA+C5BlC,SA5CW,WACf0B,GAAe,SAAAQ,GAAK,OAAIA,EAAQ,QA8C9B,6BACGtC,EAAMC,EAAc,GAAGiB,KAAI,SAAAC,GAAI,OAC9B,oBAAI,UAAQ,OAAZ,wBAAuCA,IAAfA,YCtFlCuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.59be8ee7.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { MouseEvent } from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  pages: number[][],\n  currentPage: number,\n  onPageChange: (alue: number) => void,\n  nextPage: () => void,\n  prevPage: () => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  pages,\n  currentPage,\n  onPageChange,\n  nextPage,\n  prevPage,\n}) => {\n  const valuePages = getNumbers(1, pages.length);\n\n  const hadlerChangePage = (event: MouseEvent<HTMLAnchorElement>) => {\n    if (event.currentTarget.textContent) {\n      onPageChange(+event.currentTarget.textContent);\n    }\n  };\n\n  return (\n    <ul\n      className=\"pagination\"\n    >\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage === 1}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {valuePages.map(page => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={(event) => hadlerChangePage(event)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === pages.length },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage === pages.length}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [total] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const pagesArray = (totalPages: number, currentPages: number) => {\n    const pages = [];\n    let page = [];\n\n    for (let i = 1; i <= totalPages; i += 1) {\n      if (i % currentPages !== 0 && i + 1) {\n        page.push(i);\n      } else {\n        page.push(i);\n        pages.push(page);\n        page = [];\n      }\n    }\n\n    if (page.length) {\n      pages.push(page);\n    }\n\n    return pages;\n  };\n\n  const pages = pagesArray(total, perPage);\n\n  const onPageChange = (value: number) => {\n    setCurrentPage(value);\n  };\n\n  const nextPage = () => {\n    setCurrentPage(value => value + 1);\n  };\n\n  const prevPage = () => {\n    setCurrentPage(value => value - 1);\n  };\n\n  const firstItem = pages[currentPage - 1][0];\n  const lastItem = pages[currentPage - 1][pages[currentPage - 1].length - 1];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            })}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        pages={pages}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n        nextPage={nextPage}\n        prevPage={prevPage}\n      />\n\n      <ul>\n        {pages[currentPage - 1].map(page => (\n          <li data-cy=\"item\" key={page}>{`Item ${page}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}